# in code if rabbit mq service is fully started after all config server started
# in code if config server fully started after all service will be started
services:
  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s  # command should be executed every 10 seconds.
      timeout: 5s   # This sets the timeout for each health check command to 5 seconds. If the command doesn't complete within this time frame, it will be considered a failure.
      retries: 10  # This specifies that the health check command should be retried up to 10 times if it fails before reporting a failure.
      start_period: 5s  # This indicates that the health check should wait for 5 seconds after the container is started before performing the first health check.
    extends:
      file: common-config.yml
      service: network-deploy-service



  configserver:
    image: "atulpatel2001/configserver:s4"
    container_name: "configserver_ms"
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      #      test: "curl --fail --silent http://configserver_ms:8071/actuator/health/readiness | grep UP || exit 1"

      test: "curl --fail --silent http://localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config


  accounts:
    image: "atulpatel2001/account:s4"
    container_name: "account_ms"
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: "Account"
    extends:
      file: common-config.yml
      service: microservice-configserver-config


  loan:
    image: "atulpatel2001/loan:s4"
    container_name: "loan_ms"
    ports:
      - "8090:8090"
    environment:
      SPRING_APPLICATION_NAME: "Loan"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  cards:
    image: "atulpatel2001/cards:s4"
    container_name: "cards_ms"
    ports:
      - "8091:8091"
    environment:
      SPRING_APPLICATION_NAME: "Cards"
    extends:
      file: common-config.yml
      service: microservice-configserver-config


networks:
  atulpatel2001:
    driver: "bridge"
